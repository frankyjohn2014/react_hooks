import React, {useContext, useEffect} from 'react';
import useFetch from 'hooks/useFetch'
import {CurrentUserContext} from 'context/currentUser'
import UseLocalStorage from 'hooks/useLocalStorage'

const Index = ({children}) => {
    const [{response}, doFetch] = useFetch('user')
    const [, setCurrentUserState] = useContext(CurrentUserContext)
    const [token] = UseLocalStorage('token')
    useEffect(() => {
        if(!token) {
            setCurrentUserState(state => ({
                ...state,
                isLoading: false,

            }))
            return
        }
        doFetch()
        setCurrentUserState(state => ({
            ...state,
            isLoading: true,

        }))
    }, [])

    useEffect(() => {
        if (!response) {
            return
        }
        setCurrentUserState(state => ({
            ...state,
            isLoggedIn: true,
            isLoading: false,
            currentUser: response.user



        }))
    }, [response])
    return children
};

export default Index;